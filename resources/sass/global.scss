// Variables
@import 'variables';

// // Bootstrap
// @import '~bootstrap/scss/bootstrap';

// Body and HTML tags formatting
body,
html {
    margin: 0 !important;
    font: $font-size-base $font-stack;
    line-height: $line-height-base;
    color: $fontColor;
    background-color: $backColor;

    scroll-behavior: smooth;
}

a {
    text-decoration: none;
    color: $fontColor;
}

svg {
    user-select: none;
}

#logo {
    position: fixed;
    top: 2vh;
    left: 2vh;

    height: 4.2rem;
    width: 4.2rem;

    &.live {
        transition: transform $transitionTime ease-in-out;
        &:hover {
            transform: scale(1.04);
        }
        &:active {
            transform: scale(1);
        }
    }
}

// Site navigation side-bar
nav {
    @include flexDisplay(row, center, center);

    height: 100%;
    padding: 2vh;

    font-size: $navFontSize;

    // nav a
    a {
        margin: 2.4vh 0;
        transition: transform $transitionTime ease-in-out;
        &:hover {
            transform: scale(1.02);
        }
        &:active {
            transform: scale(1);
        }
    }

    svg {

        fill: $foreLight;
        stroke: $foreLight;

        transition: transform $transitionTime ease-in-out;

    }

}


// Loading screen formatting
#loading-screen {
    position: fixed;
    top: 0;
    left: 0;

    @include flexDisplay(column, center, center);

    height: 100vh;
    width: 100vw;

    svg.loading-graphic {
        height: 12rem;
        width: 12rem;
    }

}

// Loading graphic formatting and animation
svg.loading-graphic {
    .elem {
        fill: $logoLight;

        transform: scale(0.88);
        transform-origin: center;

        &:nth-child(1) {
            animation: pulse1 1.4s ease infinite;
        }
        &:nth-child(2) {
            animation: pulse2 1.4s ease infinite;
            animation-delay: 0.2s;
        }
        &:nth-child(3) {
            animation: pulse3 1.4s ease infinite;
            animation-delay: 0.4s;
        }
    }
}
@keyframes pulse1 {
    50% {
        transform: scale(1);
        fill: $appGreen;
    }
}
@keyframes pulse2 {
    50% {
        transform: scale(1);
        fill: $appGreenDark;
    }
}
@keyframes pulse3 {
    50% {
        transform: scale(1);
    }
}


// general main content formatting
main,
#feed-nav {
    position: relative;
    left: 50%;
    transform: translateX(-50%);

    max-width: 1440px;
    width: 100%;
}

.screen-split {
    &-horizontal {
        margin: 2vh 0;

        height: $borderMed;
        width: 90%;

        background-color: $foreLight;
        border-radius: $roundedEnd;
    }
    &-vertical {
        margin: 0 2vh;

        height: 90%;
        width: $borderMed;

        background-color: $foreLight;
        border-radius: $roundedEnd;
    }
}

// "main" tag-specific content formatting
main {
    .content-panel,
    .image-panel {
        margin: 1rem 0;

        border-radius: $panelCorner;

        @include hasShadow();
    }
    .content-panel {
        width: 70%;
        background-color: $panelColor;
    }
}

.profile-image-container {
    .profile-image {
        position: relative;

        width: 100%;
        padding-top: 100%; // Force 1:1 Aspect Ratio (little squished for some reason, hence 99%)
        border-radius: 50%;

        overflow: hidden;

        > img {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);

            padding: 0;
            margin: 0;

            height: 102%;

            object-fit: cover;
        }
    }
}

// Form formatting
form {
    position: relative;

    @include flexDisplay(column, center, flex-start);

    a,
    button,
    input {
        align-self: center;
    }
    // a, input:not([type="submit"]) {
    //     width: 90%;
    // }
    a {
        margin: 2vh 0;
    }

    .form-box {
        position: relative;

        height: 4rem;
        width: 100%;

        svg,
        input {
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
        }

        svg {
            z-index: 2;
            left: 0.9rem;

            height: 1.8rem;
            width: 1.8rem;

            transition: transform $transitionTime ease-in-out;
        }

        input:not([type="checkbox"]) {
            left: 0;
            text-indent: 2.7rem;
        }

        &:hover {
            svg {
                transform: translateY(-50%) scale(1.05);
            }
        }
        &:active {
            svg {
                transform: translateY(-50%) scale(1);
            }
        }

    }
}


// Input formatting
textarea,
input,
button {
    &:focus {
        outline: none;
    }
}
textarea,
input:not([type="checkbox"]) {

    width: calc(100% - 1.44rem);

    padding: 0.72rem;
    margin-bottom: 2vh;

    font-size: 1.28rem;

    color: inherit;
    font-family: inherit;
    background-color: $inputColor;

    // @include hasShadow();
    box-shadow: 0 0 0.1rem 0 $shdwClr;

    border: none;
    border-radius: $inputCorner;

    transition: all $transitionTime ease-in-out;

    &:hover {
        // background-color: $offBack;
        box-shadow: 0 0 0.2rem 0 $shdwClr;
    }

}

button,
input[type="submit"] {
    min-width: 8rem;

    padding: 1vh 2vh;
    margin: 0 0.5vh;

    border: none;
    border-radius: $roundedEnd;

    // background-color: $panelColor;
    background-color: $appGreen;
    @include hasShadow();

    color: inherit;
    font-family: inherit;
    font-size: 1.5rem;
    font-weight: bold;

    cursor: pointer;

    transition: all $transitionTime ease-in-out;

    &:hover {
        box-shadow: 0 0 0.4rem 0 $shdwClr;

        transform: scale(1.04);
    }
    &:active {
        box-shadow: 0 0 0.4rem 0 $shdwClr;

        background-color: $appGreenDark;
        transform: scale(1);
    }
}

// Checkbox formatting
label {
    margin-bottom: 0.2rem;

    // Locked form properties
    &.locked {
        color: gray !important;
    }

    // Checkbox formatting
    &.checkOption,
    &.subOption {
        display: block;
        position: relative;
        margin: 0;
        margin-bottom: 0.6vh;

        height: 1.4rem;
        width: 0;

        font-weight: normal;
        color: inherit;
        white-space: nowrap;

        user-select: none;
        cursor: pointer;

        input {
            position: absolute;
            top: 0;
            left: 0;

            height: 0;
            width: 0;

            opacity: 0;

            cursor: pointer;

            // label.check/subOption input:checked ~ .checkbox,
            &:checked {
                ~ .checkbox,
                ~ .checkbox {
                    background-color: $appGreen;
                }
            }
        }

        &:hover {
            input {
                // label.check/subOption:hover input ~ .checkbox,
                ~ .checkbox,
                ~ .checkbox {
                    background-color: $appGreenDark;
                    transition: background-color $transitionTime ease-in-out;
                }
                // label.check/subOption:hover input:checked ~ .checkbox,
                &:checked {
                    ~ .checkbox,
                    ~ .checkbox {
                        background-color: $appGreenDark;
                        transition: background-color $transitionTime ease-in-out;
                    }
                }
            }
        }
    }

    &.subOption {
        transform: translate(3.4vh);
    }

}
.checkbox {
    position: absolute;
    top: -0.5vh;
    left: 0;

    background-color: $backColor;
    border-radius: 0.2rem;

    height: 1.2rem;
    width: 1.2rem;

    text-indent: 1.4rem;
}
input[type="checkbox"] {
    user-select: none;
}


// Footer formatting
footer {
    @include flexDisplay(row, center, center);
    height: 12vh;
    background: linear-gradient($backColor 0%, $footerColor 100%);

    a {
        font-size: 16pt;
    }
}


// Maximum aspect ratio - mobile/portrait browsers
@media (max-aspect-ratio: 12/10) {



}
